void setup() {
    size(500, 500);
    textSize(32);  // Set text size for better clarity
    fill(0);       // Set text color to black
    background(255);

    // 2D array of numbers 1 to 8, repeating
    int[][] grid = {
        {1, 2, 3, 4},
        {3, 1, 2, 4},
        {5, 6, 7, 8},
        {8, 6, 5, 7}
    };  // Set values as desired

    shuffleGrid(grid);  // Shuffle numbers in the grid

    int rows = grid.length;
    int cols = grid[0].length;

    int i = 0;
    while (i < rows) {
        int j = 0;
        while (j < cols) {
            // Draw numbers instead of lines
            draw_numbers(10 + j * (width / cols), 10 + i * (height / rows), grid[i][j]);
            println(i, j, grid[i][j]);
            j++;
        }
        i++;
    }
}

void shuffleGrid(int[][] grid) {
    // Shuffle the positions of the numbers in the grid
    int totalElements = grid.length * grid[0].length;
    int[] temp = new int[totalElements];
    
    // Fill numbers 1-8, repeating twice in temp
    for (int i = 0; i < 8; i++) {
        temp[i * 2] = i + 1;
        temp[i * 2 + 1] = i + 1;
    }

    // Shuffle the numbers in temp
    for (int i = 0; i < totalElements; i++) {
        int randomIndex = (int) random(totalElements);
        // Swap positions
        int tempValue = temp[i];
        temp[i] = temp[randomIndex];
        temp[randomIndex] = tempValue;
    }

    // Fill the values back into the grid
    int index = 0;
    for (int i = 0; i < grid.length; i++) {
        for (int j = 0; j < grid[0].length; j++) {
            grid[i][j] = temp[index++];
        }
    }
}

void draw_numbers(int x, int y, int n) {
    // Draw numbers at the specified position
    text(n, x + 10, y + 30);  // Adjust the position of the number appropriately
}
